#!/usr/bin/env bash
# SPDX-License-Identifier: Apache-2.0 OR MIT
# shellcheck disable=SC2207
set -CeEuo pipefail
IFS=$'\n\t'
trap -- 's=$?; printf >&2 "%s\n" "${0##*/}:${LINENO}: \`${BASH_COMMAND}\` exit with ${s}"; exit ${s}' ERR
cd -- "$(dirname -- "$0")"/..

# Generates code based on target-spec.
#
# USAGE:
#    ./tools/target_spec.sh
#
# This script is intended to be called by gen.sh, but can be called separately.

bail() {
  printf >&2 'error: %s\n' "$*"
  exit 1
}

build_file=src/gen/build.rs
mkdir -p -- "$(dirname -- "${build_file}")"

arm_but_thumb_mode=()
thumb_but_arm_mode=()
for target in $(rustc -Z unstable-options --print all-target-specs-json | jq -r '. | to_entries[] | if .value.arch == "arm" then .key else empty end'); do
  cfgs=$(rustc --print cfg --target "${target}")
  case "${target}" in
    thumb*)
      if ! grep -Fq 'target_feature="thumb-mode"' <<<"${cfgs}"; then
        thumb_but_arm_mode+=("${target}")
      fi
      ;;
    *)
      if grep -Fq 'target_feature="thumb-mode"' <<<"${cfgs}"; then
        arm_but_thumb_mode+=("${target}")
      fi
      ;;
  esac
done
if [[ ${#thumb_but_arm_mode[@]} -ne 0 ]]; then
  IFS=' '
  bail "thumb* but in arm mode...: ${thumb_but_arm_mode[*]}"
fi

# sort and dedup
IFS=$'\n'
arm_but_thumb_mode=($(LC_ALL=C sort -u <<<"${arm_but_thumb_mode[*]}" | sed -E 's/^/    "/g; s/$/",/g'))
IFS=$'\n\t'

cat >|"${build_file}" <<EOF
// SPDX-License-Identifier: Apache-2.0 OR MIT
// This file is @generated by ${0##*/}.
// It is not intended for manual editing.

#[rustfmt::skip]
pub(crate) static ARM_BUT_THUMB_MODE: &[&str] = &[
${arm_but_thumb_mode[*]}
];
EOF
