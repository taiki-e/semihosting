[package]
name = "no-std-test"
version = "0.0.0"
edition = "2021"
publish = false

[features]
qemu-system = ["semihosting-no-std-test-rt/qemu-system"]
qemu-user = ["semihosting-no-std-test-rt/qemu-user"]
panic-unwind = ["semihosting/panic-unwind", "semihosting/backtrace", "linked_list_allocator", "spin"]
portable-atomic = ["semihosting/portable-atomic", "spin/portable_atomic"]

[dependencies]
semihosting = { path = "../..", features = ["stdio", "fs", "time", "args", "panic-handler"] }
semihosting-no-std-test-rt = { path = "../no-std-rt" }

# linked_list_allocator's LockedHeap uses spinning_top, but it doesn't compatible
# with targets without atomic CAS. Implement our own LockedHeap by using spin,
# which supports portable-atomic.
linked_list_allocator = { version = "0.10", optional = true, default-features = false }
spin = { version = "0.9", optional = true, default-features = false, features = ["spin_mutex"] }

# cfg(target_feature = "mclass") is not available on stable/beta.
[target.thumbv6m-none-eabi.dependencies]
cortex-m-rt = "0.7"
[target.thumbv7m-none-eabi.dependencies]
cortex-m-rt = "0.7"
[target.thumbv7em-none-eabi.dependencies]
cortex-m-rt = "0.7"
[target.thumbv7em-none-eabihf.dependencies]
cortex-m-rt = "0.7"
[target.'thumbv8m.base-none-eabi'.dependencies]
cortex-m-rt = "0.7"
[target.'thumbv8m.main-none-eabi'.dependencies]
cortex-m-rt = "0.7"
[target.'thumbv8m.main-none-eabihf'.dependencies]
cortex-m-rt = "0.7"

[workspace]
resolver = "2"

[lints.rust]
rust_2018_idioms = "warn"
single_use_lifetimes = "warn"
# unsafe_op_in_unsafe_fn = "warn" # Set at crate-level instead since https://github.com/rust-lang/rust/pull/100081 is not available on MSRV

[profile.dev]
opt-level = "s"

[profile.release]
